#!/bin/bash

# This file is a part of ThetaRush.
#
# ThetaRush is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ThetaRush is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.
#
# If not, see <https://www.gnu.org/licenses/>.

# -- Attention: This file is generated by Deepseek R1 --

# Purpose: Recursively format files with specified extensions while excluding directories
# Dependencies: fd and clang-format

# Default configurations
DEFAULT_EXTENSIONS=("c" "h")         # Default file extensions to format
EXCLUDE_DIRS=("libs")                # Default directories to exclude
CLANG_FORMAT_CONFIG=""               # Custom clang-format config file path

# Display usage information
usage() {
  echo "Usage: $0 [options]"
  echo "Options:"
  echo "  -e <extensions>    File extensions to format (comma-separated, e.g., 'c,h,cpp'), default: 'c,h'"
  echo "  -E <exclude_dirs>  Directories to exclude (comma-separated, e.g., 'libs,build'), default: 'libs'"
  echo "  -c <config_file>   clang-format configuration file (e.g., .clang-format or predefined style)"
  echo "  -h                 Show this help message"
  exit 1
}

# Check required dependencies
check_dependency() {
  if ! command -v fd &> /dev/null; then
    echo "Error: 'fd' tool not found. Please install it first."
    echo "Installation: https://github.com/sharkdp/fd#installation"
    exit 1
  fi

  if ! command -v clang-format &> /dev/null; then
    echo "Error: 'clang-format' not found. Please install it."
    echo "Installation: https://clang.llvm.org/docs/ClangFormat.html"
    exit 1
  fi
}

# Main function
main() {
  check_dependency

  # Parse command-line options
  while getopts "e:E:c:h" opt; do
    case $opt in
      e) IFS=',' read -ra DEFAULT_EXTENSIONS <<< "$OPTARG" ;;
      E) IFS=',' read -ra EXCLUDE_DIRS <<< "$OPTARG" ;;
      c) CLANG_FORMAT_CONFIG="$OPTARG" ;;
      h) usage ;;
      *) usage ;;
    esac
  done

  # Build fd extension arguments (-e c -e h ...)
  extension_args=()
  for ext in "${DEFAULT_EXTENSIONS[@]}"; do
    extension_args+=("-e" "$ext")
  done

  # Build exclude directory arguments
  exclude_args=()
  for dir in "${EXCLUDE_DIRS[@]}"; do
    exclude_args+=("--exclude" "$dir")
  done

  # Build clang-format arguments
  clang_format_args=("-i")
  if [[ -n $CLANG_FORMAT_CONFIG ]]; then
    clang_format_args+=("-style=file:$CLANG_FORMAT_CONFIG")
  fi

  # Execute formatting
  echo "Formatting files (extensions: ${DEFAULT_EXTENSIONS[*]}, excluded directories: ${EXCLUDE_DIRS[*]})..."
  fd "${extension_args[@]}" "${exclude_args[@]}" -t f --exec-batch clang-format "${clang_format_args[@]}" {}
  echo "Formatting completed!"
}

main "$@"